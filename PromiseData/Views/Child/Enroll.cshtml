@model PromiseData.ViewModels.ChildEnrollViewModel

@{
    ViewBag.Title = "Enroll";
}

<h2>Enroll</h2>
@using (Html.BeginForm(Model.Action, "Child"))
{
    <div>
        <fieldset class="col-md-5">
            <legend>Child</legend>
            @Html.HiddenFor(m => m.ID)
            <div class="">
                <div class="form-group">
                    @Html.LabelFor(m => m.ChildID)
                    @Html.DropDownListFor(m => m.ChildID, new SelectList(Model.Children, "ID", "FullName"), new { @class = "form-control" })
                </div>
            </div>
        </fieldset>
        <fieldset class="col-md-offset-2 col-md-5">
            <legend>Classroom</legend> 
            <div class="">
                <div class="form-group">
                    @Html.LabelFor(m => m.FacilityID)
                    @Html.DropDownListFor(m => m.FacilityID, new SelectList(Model.Sites, "ID", "Description"), new { @class = "form-control" })
                </div>
            </div>

            <div class="">
                <div class="form-group">
                    @Html.LabelFor(m => m.ClassroomID)
                    @Html.DropDownListFor(m => m.ClassroomID, new SelectList(Model.Classrooms, "ID", "Description"), new { @class = "form-control" })
                </div>
            </div>
        </fieldset>

        <div class="row">
            <div class="col-md-3 form-group">
                @Html.LabelFor(m => m.StartDate)
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(m => m.StartDate)
            </div>

            <div class=" col-md-3 form-group">
                @Html.LabelFor(m => m.EndDate)
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(m => m.EndDate)
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-3">
                @Html.LabelFor(m => m.EndReason)
                @Html.DropDownListFor(m => m.EndReason, new SelectList(Model.ExitReasonList), new { @class = "form-control" })
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(m => m.OtherEndReason)
                @Html.TextAreaFor(m => m.OtherEndReason, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.OtherEndReason)
            </div>
        </div>

        <div class="row">
            <div class="col-md-8">
                @Html.LabelFor(m => m.MonthlyAttendance)
                @Html.TextBoxFor(m => m.MonthlyAttendance, new { @class = "form-control", type = "Range", value = "30", min = "0", max = "100" })
                @Html.ValidationMessageFor(m => m.MonthlyAttendance)
            </div>
            <div class="col-md-offset-1 col-md-3">
                <h3>Attendance units: <span class="label label-info" id="attendanceInputLabel"></span></h3>
            </div>
        </div>

        <div class="">
            <div class="form-group">
                @Html.LabelFor(m => m.ReceivedInfo)
                @Html.EditorFor(m => m.ReceivedInfo, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ReceivedInfo)
            </div>
        </div>

        <div class="">
            <div class="form-group">
                @Html.LabelFor(m => m.TransportationUse)
                @Html.EditorFor(m => m.TransportationUse, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.TransportationUse)
            </div>
        </div>

        <div class="form-group">
            @if (Model.ID < 1)
            {
                <button type="submit" class="btn btn-primary">Enroll</button>
            }
            else
            {
                <button type="submit" class="btn btn-primary">Update</button>
            }

        </div>
    </div>
}

@section Scripts
{
    <script type="text/javascript">
        var url = '@Url.Action("getClassrooms", "Child")'; // Don't hard code your url's!
        var classrooms = $('#ClassroomID'); // cache it
        $("#FacilityID").change(function () {
            var id = $(this).val(); // Use $(this) so you don't traverse the DOM again
            $.getJSON(url, { id: id }, function(response) {
                classrooms.empty(); // remove any existing options
                $.each(response, function (index, item) { // item is now an object containing properties ID and Text
                    classrooms.append($('<option></option>').text(item.Description).val(item.ID));
                });
            });
        });


        var attendanceLabel = $('#attendanceInputLabel');
        $('#MonthlyAttendance').mousemove(function () {
            attendanceLabel.html($(this).val());
        });
    </script>
}  