@model PromiseData.ViewModels.InstitutionsViewModel

<h2>@Model.Heading</h2>

<p>
    @if (Model.CanAdd)
    {
        @Html.ActionLink("Create New", "Create", new { @role = "button" }, new { @class = "btn btn-default" })
    }
</p>

@using (Html.BeginForm("Search", "Institution")) {
    <div class="form-group">
        @Html.Label("search", "Institution Lookup: ")
        <div class="input-group col-md-6">
            @Html.TextBoxFor(m => m.SearchTerm, new { @class = "form-control", placeholder = "Lookup operator or hub", value = Model.SearchTerm })
            <span class="input-group-btn">
                <button type="submit" class="btn btn-default glyphicon glyphicon-search"></button>
            </span>
        </div>
    </div>
}

<table class="table table-hover">
    <tr>
        <th>
            @*@Html.DisplayName(PromiseData.Models.Institution.LegalName)*@
            Name
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Institutions.)*@
            Region
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.BackboneOrg)*@
            Organization
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.DirectorAgentId)*@
            Director
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.LocationAddressId)*@
            Location
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.ActiveDate)*@
            Active date
        </th>
        <th>
            @Html.ActionLink("List Hubs", "FilterHubs", new { @role = "button" }, new { @class = "btn btn-primary btn-sm" })
        </th>
        <th>
            @Html.ActionLink("List Operators", "FilterProviders", new { @role = "button" }, new { @class = "btn btn-primary btn-sm" })
        </th>
        <th>
            @Html.ActionLink("Show All", "Index", new { role = "button" }, new { @class = "btn btn-primary btn-sm" })
        </th>
    </tr>

@foreach (var item in Model.Institutions) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.LegalName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Region)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BackboneOrg)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ContactAgent1.AgentName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Address.City)
        </td>
        <td>
            @item.ActiveDate.ToShortDateString()
        </td>
        <td>
            @if (item.IsHub)
            {
                <div class="label label-warning">Hub</div>
            }
        </td>
        <td>
            @if (item.IsProvider)
            {
                <div class="label label-info">Operator</div>
            }
        </td>
        <td>
            @if (Model.CanEdit)
            { 
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-default btn-xs" });
                @Html.Raw(" | ");
            }
            
            @Html.ActionLink("Details", "Details", new { id=item.Id }, new { @class = "btn btn-default btn-xs" })
            @if (Model.CanDelete)
            {
                @Html.Raw(" | ");
                @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-default btn-xs" });
            }
            
        </td>
    </tr>
}

</table>
