@model PromiseData.ViewModels.FacilityViewModel

@{
    ViewBag.Title = "Details";
}

<h2>Provider Site Details</h2>

<div>
    <ul class="breadcrumb">
        @if (!Model.Operator.IsHub)
        {
            <li>@Html.ActionLink(Model.Operator.ParentHub.LegalName, "Details", "Institution", new { id = Model.Operator.ParentHubId }, null)</li>
        }
        <li>@Html.ActionLink(Model.Operator.LegalName, "Details", "Institution", new { id = Model.Operator.Id }, null)</li>

        <li class="active">@Html.DisplayFor(model => model.Description)</li>
    </ul>

    <h4>@Html.DisplayFor(model => model.Description)</h4>
    <p>
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
        @Html.ActionLink("Edit", "Edit", new { id = Model.ID }, new { @class = "btn btn-default" })
    </p>
    <hr />


    <ul class="list-group">
        @if (Model.Unlicensed)
        {
            <li class="list-group-item">
                @Html.DisplayNameFor(model => model.Unlicensed)
                <span class="pull-right">Licensing in process</span>
            </li>
        }
        else
        {
            <li class="list-group-item">
                @Html.DisplayNameFor(model => model.LicenseNumber)
                <span class="pull-right">@Html.DisplayFor(model => model.LicenseNumber)</span>
            </li>
        }
        <li class="list-group-item">
            <span class="badge">@Html.DisplayFor(model => model.ProviderFacilityType)</span>
            @Html.DisplayNameFor(model => model.ProviderFacilityType)
        </li>
        <li class="list-group-item">
            <span class="badge">@Html.DisplayFor(model => model.SparkRating)</span>
            @Html.DisplayNameFor(model => model.SparkRating)
        </li>
        <li class="list-group-item">
            <span class="badge">@Html.DisplayFor(model => model.Phone)</span>
            @Html.DisplayNameFor(model => model.Phone)
        </li>
        <li class="list-group-item">
            <span class="badge">@Html.DisplayFor(model => model.Email)</span>
            @Html.DisplayNameFor(model => model.Email)
        </li>
        <li class="list-group-item">
            <span class="badge">@Html.DisplayFor(model => model.Turnover_NonPPStaff)</span>
            @Html.DisplayNameFor(model => model.Turnover_NonPPStaff)
        </li>
        <li class="list-group-item">
            <span class="list-group-item-heading">@Html.DisplayNameFor(model => model.TurnoverReasons_NonPPStaff)</span>
            <p>@Html.DisplayFor(model => model.TurnoverReasons_NonPPStaff)</p>
        </li>
        <li class="list-group-item">
            <span class="badge"><i class="glyphicon glyphicon-ban-circle"></i></span>
            Transportation Services offered
        </li>
        <li class="list-group-item">
            <span class="badge">@Html.DisplayFor(model => model.ChildrenReceivingTransportationServices)</span>
            @Html.DisplayNameFor(model => model.ChildrenReceivingTransportationServices)
        </li>
    </ul>

    <div class="row">
        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading">
                    @Html.DisplayNameFor(model => model.Address)
                </div>
                <div class="panel-body">
                    @if (Model.Address != null)
                    {
                        <address>
                            @Model.Address.Address1
                            <br />
                            @Model.Address.Address2
                            <br />
                            @Model.Address.Address3
                            <br />
                            @Model.Address.City
                            @Model.Address.LU_State.Abbreviation
                            @Model.Address.ZipCode
                        </address>
                    }
                    else
                    {
                        <p class="text-warning">Missing</p>
                    }
                </div>
                @if (Model.CanEdit)
                {
                    <div class="panel-footer">
                        @if (Model.Address == null)
                        {
                            @Html.ActionLink("Add", "CreateForProvider", "Address", new { id = Model.ID }, new { @class = "btn btn-default" })
                        }
                        else
                        {
                            @Html.ActionLink("Update", "Edit", "Address", new { id = Model.Address.ID }, new { @class = "btn btn-default" })
                        }
                    </div>
                }
            </div>
        </div>

        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading">
                    @Html.DisplayNameFor(model => model.ContactAgent)
                </div>
                <div class="panel-body">
                    @if (Model.ContactAgent != null)
                    {
                        <address>
                            @Model.ContactAgent.AgentTitle
                            <br />
                            @Model.ContactAgent.AgentName
                            <br />
                            @Model.ContactAgent.AgentPhone
                            <br />
                            @Model.ContactAgent.AgentEmail
                        </address>
                    }
                    else
                    {
                        <p class="text-warning">Missing</p>
                    }
                </div>
                @if (Model.CanEdit)
                {
                    <div class="panel-footer">
                        @if (Model.ContactAgent == null)
                        {
                            @Html.ActionLink("Add", "CreateForProvider", "ContactAgents", new { id = Model.ID }, new { @class = "btn btn-default" })
                        }
                        else
                        {
                            @Html.ActionLink("Update", "Edit", "ContactAgents", new { id = Model.ContactAgent.AgentId }, new { @class = "btn btn-default" })
                        }
                    </div>
                }
            </div>

        </div>
    </div>

    <div class="row">
        <div class="panel panel-default">
            <div class="panel-body">
                <h4>Preschool Promise Program Year</h4>
                @if(Model.ProgramYears.Count() < 1)
                {
                    <p class="text-warning">
                        None
                    </p>
                }
                else
                {
                    foreach (var program in Model.ProgramYears)
                    {
                        program.StartDate.ToShortDateString();
                        program.EndDate.ToShortDateString();
                        program.ServiceHours.ToString();
                    }
                }
                @Ajax.ActionLink("Add Program Year", "AddProgramYear", new { id = Model.ID }, new AjaxOptions()
                {
                    HttpMethod = "GET",
                    AllowCache = false,
                    InsertionMode = InsertionMode.InsertAfter,
                    UpdateTargetId = "programwrapper"
                }) 
                <div id="programwrapper"></div>

                <button id="2ndaddme">Addmetoo</button>
                <div id="dvCategoryResults">
                    
                </div>
            </div>

            @if (Model.CanEdit)
            {
                <div class="panel-footer">

                    @if (Model.ProgramYears.Count() < 1)
                    {
                        @Html.ActionLink("Add", "CreateForProvider", "Address", new { id = Model.ID }, new { @class = "btn btn-default" })
                    }
                    else
                    {
                        @Html.ActionLink("Update", "Edit", "Address", new { id = Model.Address.ID }, new { @class = "btn btn-default" })
                    }
                </div>
            }

        </div>
    </div>

    
    <h4>@Html.DisplayNameFor(model => model.AdditionalChildFamilySupports_ID)</h4>
    <ul class="list-group">
        @foreach (var Support in Model.Supports)
        {
            <li class="list-group-item">
                @Support.Description
            </li>
        }
    </ul>
    <hr />

    <h4>Site Waivers</h4>
    <div class="panel panel-default">
        <div class="panel-heading">Waiver Requests</div>
        <div class="panel-body">
            @foreach (var Waiver in Model.WaiverRequests)
            {
                <dl class="dl-horizontal">
                    <dt>Waiver Type:</dt>
                    <dd>@Waiver.WaiverType</dd>

                    @if (String.Compare(Waiver.WaiverType, "Staff") == 0)
                    {
                        <dt>Staff: </dt>
                        <dd>
                            @Waiver.Staff.NameLast
                            @Html.Raw(", ")
                            @Waiver.Staff.NameFirst
                        </dd>
                    }
                    else
                    {
                        <dt>Spark Rating:</dt>
                        <dd>@Waiver.SparkCurrent</dd>

                        <dt>Service Hours:</dt>
                        <dd>@Waiver.ServiceHours</dd>
                    }
                </dl>
            }
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">Current Waivers</div>
        <div class="panel-body">
            @foreach (var Waiver in Model.WaiversCurrent)
            {
                <dl class="dl-horizontal">
                    <dt>Waiver Type:</dt>
                    <dd>@Waiver.WaiverType</dd>

                    @if (String.Compare(Waiver.WaiverType, "Staff") == 0)
                    {
                        <dt>Staff: </dt>
                        <dd>
                            @Waiver.Staff.NameLast
                            @Html.Raw(", ")
                            @Waiver.Staff.NameFirst
                        </dd>

                        <dt>Development:</dt>
                        <dd>@Waiver.Development</dd>

                    }
                    else
                    {
                        <dt>Spark Rating:</dt>
                        <dd>@Waiver.SparkCurrent</dd>
                        <dt>Spark Rating:</dt>
                        <dd>@Waiver.SparkCurrent</dd>

                        <dt>Service Hours:</dt>
                        <dd>@Waiver.NineHundredServiceHours</dd>

                        <dt>Expiration:</dt>
                        <dd>@Waiver.Expiration</dd>
                    }

                </dl>
            }
        </div>
    </div>
    <hr />

    <div class="panel panel-default">
        <div class="panel-heading">@Html.DisplayNameFor(model => model.MonitoringVisit1Date)</div>
        <div class="panel-body">
            <dl class="dl-horizontal">
                <dt>@Html.DisplayNameFor(model => model.MonitoringVisit1Date)</dt>
                <dd>@Html.DisplayFor(model => model.MonitoringVisit1Date)</dd>
                <dt>@Html.DisplayNameFor(model => model.MonitoringVisit1Result)</dt>
                <dd>@Html.DisplayFor(model => model.MonitoringVisit1Result)</dd>
            </dl>
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">@Html.DisplayNameFor(model => model.MonitoringVisit2Date)</div>
        <div class="panel-body">
            <dl class="dl-horizontal">
                <dt>@Html.DisplayNameFor(model => model.MonitoringVisit2Date)</dt>
                <dd>@Html.DisplayFor(model => model.MonitoringVisit2Date)</dd>
                <dt>@Html.DisplayNameFor(model => model.MonitoringVisit2Result)</dt>
                <dd>@Html.DisplayFor(model => model.MonitoringVisit2Result)</dd>
            </dl>
        </div>
    </div>

</div>


@*
    Table of Site's Classes
*@
<p>
    @if (Model.CanEdit)
    {
        @Html.ActionLink("Add Classroom", "Create", "Classroom", new { id = Model.ID }, new { @class = "btn btn-default" })
    }
</p>


<h3>@Model.Description Classrooms</h3>
<table class="table table-hover">
    <tr>
        <th>
            Name:
        </th>
        <th>
            Lead Teacher:
        </th>
        <th>
            x
        </th>
        <th>
           x
        </th>
        <th>
            x
        </th>
        <th>
            x
        </th>
        <th>
            x
        </th>
        <th>
            x
        </th>
        <th>
            x
        </th>

        <th>
        </th>

        <th>

        </th>
        <th>

        </th>
        <th>

        </th>
        <th>

        </th>
    </tr>

    @foreach (var classroom in Model.Classrooms)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => classroom.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => classroom.TeacherClasses.FirstOrDefault(t => t.Teacher.TeacherType.Contains("Lead Teacher")).Teacher.NameFirst)
            </td>
            <td>
                @Html.DisplayFor(modelItem => classroom.NewOrExpandedClass)
            </td>
            <td>
                @Html.DisplayFor(modelItem => classroom.SessionHours)
            </td>
            <td>
                @Html.DisplayFor(modelItem => classroom.SessionDays)
            </td>
            <td>
                @Html.DisplayFor(modelItem => classroom.SessionWeeks)
            </td>
            <td>
                @Html.DisplayFor(modelItem => classroom.PPStudents)
            </td>
            <td>
                @Html.DisplayFor(modelItem => classroom.NonPPStudentsHSOPK)
            </td>
            <td>
                @Html.DisplayFor(modelItem => classroom.NonPPStudentsThirdParty)
            </td>
            <td>
                @Html.DisplayFor(modelItem => classroom.PPSlotsUnfilled)
            </td>
            <td>
                @Html.DisplayFor(modelItem => classroom.CLASSScore_ClassroomOrganization)
            </td>
            <td>
                @Html.DisplayFor(modelItem => classroom.CLASSScore_EmotionalSupport)
            </td>
            <td>
                @Html.DisplayFor(modelItem => classroom.CLASSScore_InstructionalSupport)
            </td>
            <td>
                @*@Html.ActionLink("Edit", "Edit", new { id = item.Id }) |*@
                @Html.ActionLink("Details", "Details", "Classroom", new { id = classroom.ID }, new { @class = "btn btn-default btn-xs" })
                @*@Html.ActionLink("Delete", "Delete", new { id = item.Id })*@
            </td>
        </tr>
    }

</table>

@section Scripts
{
    <script type="text/javascript">

        $(document).ready(function () {
            $("#2ndaddme").click(function () {
               $("#dvCategoryResults").load('@(Url.Action("AddProgramYear", "Facility", new { id = Model.ID }, Request.Url.Scheme))');
            });
        });
    </script>  
}  