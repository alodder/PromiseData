@model PromiseData.Models.WaiverRequest


<h2>New</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Waiver Request</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.WaiverType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.Label("Site")
                @Html.RadioButtonFor(model => model.WaiverType, "Site")
            </div>
            <div class="col-md-2">
                @Html.Label("Staff")
                @Html.RadioButtonFor(model => model.WaiverType, "Staff")
                @Html.ValidationMessageFor(model => model.WaiverType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="siteblock">
            <div class="form-group">
                @Html.LabelFor(model => model.SiteID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("SiteID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SiteID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-2">
                    @Html.Label("900 Service Hours")
                    @Html.RadioButton("SiteType", "Hours", true)
                </div>
                <div class="col-md-2">
                    @Html.Label("Spark Rating")
                    @Html.RadioButton("SiteType", "Spark", false)
                </div>
            </div>

            <div id="hoursblock">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.ServiceHours, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ServiceHours, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ServiceHours, "", new { @class = "text-danger" })
                        <p>Hours of service expected to provide this year:</p>
                    </div>
                </div>
            </div>

            <div id="sparkblock">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.SparkCurrent, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.SparkCurrent,
                           new SelectList(new List<SelectListItem>
                           {
                            new SelectListItem { Text = "Unlicensed", Value = "Unlicensed"},
                            new SelectListItem { Text = "Licensed", Value = "Licensed"},
                            new SelectListItem { Text = "Waiver", Value = "Waiver"},
                            new SelectListItem { Text = "Portfolio Submitted (awaiting star designation)", Value = "Portfolio"},
                            new SelectListItem { Text = "3 Star Rated", Value = "3star"}
                           }, "Value", "Text")
                           , htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SparkCurrent, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>

        <div id="staffblock">
            <div class="form-group">
                @Html.LabelFor(model => model.StaffID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("StaffID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StaffID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Qualification, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Qualification,
                        new SelectList(new List<SelectListItem>
                        {
                            new SelectListItem { Text = "Lead Teacher", Value = "Lead Teacher"},
                            new SelectListItem { Text = "Support Staff", Value = "Support Staff"}
                        }, "Value", "Text")
                        , htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Qualification, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group col-md-12">
            @Html.LabelFor(model => model.AdditionalComments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.AdditionalComments, 7, 70, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AdditionalComments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>



@section Scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#siteblock").hide();
            $("#staffblock").hide();
            $("#sparkblock").hide();

            var waiverType = $('input[name=WaiverType]:checked').val();

            if (waiverType == "Site") {
                $("#siteblock").show();
                $("#staffblock").hide();
            }
            if (waiverType == "Staff") {
                $("#staffblock").show();
                $("#siteblock").hide();
            }
        });

        $('#siteblock input:radio').change(function () {
            var selValue = $('input[name=SiteType]:checked').val();
            if (selValue == "Hours") {
                $("#hoursblock").show();
                $("#sparkblock").hide();
            }
            if (selValue == "Spark") {
                $("#sparkblock").show();
                $("#hoursblock").hide();
            }
        });

        $("input:radio").click(function () {
            var selValue = $('input[name=WaiverType]:checked').val();
            if (selValue == "Site") {
                $("#siteblock").show();
                $("#staffblock").hide();
            }
            if (selValue == "Staff") {
                $("#staffblock").show();
                $("#siteblock").hide();
            }
        });
    </script>
}  