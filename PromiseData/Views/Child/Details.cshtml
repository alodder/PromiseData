@model PromiseData.ViewModels.ChildDetailsViewModel

@{
    ViewBag.Title = "Details";
}

<h2>Child</h2>

<div>
    <h4>Details</h4>
    <p>
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
        @if (Model.CanEdit)
        {
            @Html.ActionLink("Edit Details", "Edit", new { id = Model.ID }, new { @class = "btn btn-default" })
        }
    </p>
    <hr />

    <div class="row">
        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading">Identification</div>
                <div class="panel-body">
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.ELD_ID)
                        </dt>

                        <dd>
                            @Html.Raw((Model.ELD_ID == null ? "<i class=\"text-danger\">Missing</i>" : Model.ELD_ID))
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.SSID)
                        </dt>

                        <dd>
                            @Html.Raw((Model.SSID == null ? "<i class=\"text-danger\">Missing</i>" : Model.SSID))
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.LastName)
                        </dt>

                        <dd>
                            @Html.Raw((Model.LastName == null ? "<i class=\"text-danger\">Missing</i>" : Model.LastName))
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.FirstName)
                        </dt>

                        <dd>
                            @Html.Raw((Model.FirstName == null ? "<i class=\"text-danger\">Missing</i>" : Model.FirstName))
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.MiddleName)
                        </dt>

                        <dd>
                            @Html.Raw((Model.MiddleName == null ? "<i class=\"text-danger\">Missing</i>" : Model.MiddleName))
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.GenerationCodeID)
                        </dt>

                        <dd>
                            @Html.Raw((Model.Generation == null ? "<i class=\"text-danger\">Missing</i>" : Model.Generation.Description))
                        </dd>
                    </dl>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading">Additional Name Information</div>
                <div class="panel-body">
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.OtherNameTypeID)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.OtherNameType.Description)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.OtherLastName)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.OtherLastName)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.OtherFirstName)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.OtherFirstName)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.OtherMiddleName)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.OtherMiddleName)
                        </dd>
                    </dl>
                </div>
            </div>
        </div>
        
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">Details</div>
        <div class="panel-body">
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Birthdate)
                </dt>

                <dd>
                    @Model.Birthdate.ToShortDateString()
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.GenderID)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Gender.Description)
                </dd>
            </dl>
            <dl class="dl-horizontal">
                <dt>
                    Race/Ethnicity
                </dt>

                <dd>
                    @foreach (var childrace in Model.ChildRaces)
                    {
                        @Model.RaceEthnicityList.Single(r => r.Id == childrace.RaceID).Description
                        @Html.Raw("<br/>")
                    }
                </dd>
            </dl>
        </div>
        <div class="panel-footer">
            @if (Model.CanEdit)
            {
                @Html.ActionLink("Edit", "EditRace", new { id = Model.ID }, new { @class = "btn btn-default btn-xs" })
            }
        </div>
    </div>


    <div class="panel panel-default clearfix">
        <div class="panel-heading">
            Address
        </div>
        <div class="panel-body">
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Address_ID)
                </dt>
                <dd>
                    @if (Model.Address != null)
                    {
                        String address = (Model.Address.Address1 == null ? "" : Model.Address.Address1);
                        address += (Model.Address.Address2 == null ? "" : "<br>" + Model.Address.Address2);
                        address += (Model.Address.Address3 == null ? "" : "<br>" + Model.Address.Address3);
                        address += (Model.Address.City == null ? "" : "<br>" + Model.Address.City);
                        address += (Model.Address.LU_State == null ? "" : " " + Model.Address.LU_State.Abbreviation);
                        address += (Model.Address.ZipCode == null ? "" : " " + Model.Address.ZipCode);

                        @Html.Raw("<address>");
                        @Html.Raw(address);
                        @Html.Raw("</address>");
                    }
                    else
                    {
                        <i>No Address</i>
                    }
                </dd>

            </dl>
        </div>
        <div class="panel-footer">
            @if (Model.CanEdit)
            {
                if(Model.Address != null)
                {
                    @Html.ActionLink("Update", "Edit", "Address", new { id = Model.Address_ID }, new { @class = "btn btn-default btn-xs" })
                }
                else
                {
                    @Html.ActionLink("Add", "CreateForChild", "Address", new { id = Model.ID }, new { @class = "btn btn-default btn-xs" })
                }

            }
        </div>
    </div>

    <table class="table table-hover table-responsive">
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.ChildTransportation)
            </td>

            <td>
                @Html.DisplayFor(model => model.ChildTransportation)
            </td>

        </tr>

        <tr>
            <td>
                @Html.DisplayNameFor(model => model.InFosterCare)
            </td>

            <td>
                @Html.DisplayFor(model => model.InFosterCare)
            </td>
        </tr>

        <tr>

            <td>
                @Html.DisplayNameFor(model => model.Homeless)
            </td>

            <td>
                @Html.DisplayFor(model => model.Homeless)
            </td>
        </tr>

        <tr>
            <td>
                @Html.DisplayNameFor(model => model.Migrant)
            </td>

            <td>
                @Html.DisplayFor(model => model.Migrant)
            </td>
        </tr>

        <tr>
            <td>
                @Html.DisplayNameFor(model => model.HeadStartEligibility)
            </td>

            <td>
                @Html.DisplayFor(model => model.HeadStartEligibility)
            </td>
        </tr>

    </table>

    <table class="table table-hover table-responsive">
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.Language_ID)
            </td>

            <td>
                @Html.DisplayFor(model => model.Language.Description)
            </td>

        </tr>

        <tr>

            <td>
                @Html.DisplayNameFor(model => model.EnglishLanguageLearner)
            </td>

            <td>
                @Html.DisplayFor(model => model.EnglishLanguageLearner)
            </td>
        </tr>

        <tr>
            <td>
                @Html.DisplayNameFor(model => model.ClassroomLanguage_ID)
            </td>

            <td>
                @Html.DisplayFor(model => model.Language.Description)
            </td>

        </tr>
    </table>

    <table class="table table-hover table-responsive">
        <tr>

            <td>
                @Html.DisplayNameFor(model => model.SchoolDistrictCode)
            </td>

            <td>
                @Html.DisplayFor(model => model.SchoolDistrictCode)
            </td>
        </tr>

        <tr>

            <td>
                @Html.DisplayNameFor(model => model.ElementarySchoolCode)
            </td>

            <td>
                @Html.DisplayFor(model => model.ElementarySchoolCode)
            </td>
        </tr>

        <tr>
            <td>
                @Html.DisplayNameFor(model => model.PriorEarlyLearningMonths)
            </td>

            <td>
                @Html.DisplayFor(model => model.PriorEarlyLearningMonths)
            </td>

        </tr>

        <tr>

            <td>
                @Html.DisplayNameFor(model => model.Program_ID)
            </td>

            <td>
                @Html.DisplayFor(model => model.ProgramSessionType)
            </td>
        </tr>
        <tr>

            <td>
                @Html.DisplayNameFor(model => model.SchoolDistrictCatchment)
            </td>

            <td>
                @Html.DisplayFor(model => model.SchoolDistrictCatchment)
            </td>
        </tr>

        <tr>
            <td>
                @Html.DisplayNameFor(model => model.ElementarySchoolCatchment)
            </td>

            <td>
                @Html.DisplayFor(model => model.ElementarySchoolCatchment)
            </td>

        </tr>
    </table>

    <table class="table table-hover table-responsive">
        <tr>

            <td>
                @Html.DisplayNameFor(model => model.Parent_ProviderConsultations)
            </td>

            <td>
                @Html.DisplayFor(model => model.Parent_ProviderConsultations)
            </td>
        </tr>

        <tr>

            <td>
                @Html.DisplayNameFor(model => model.TransitionPlanConferenceDate)
            </td>

            <td>
                @Html.DisplayFor(model => model.TransitionPlanConferenceDate)
            </td>
        </tr>

        <tr>
            <td>
                @Html.DisplayNameFor(model => model.ExitReason_ID)
            </td>

            <td>
                @Html.DisplayFor(model => model.ExitReason)
            </td>

        </tr>

    </table>

    <div class="panel panel-default">
        <div class="panel-heading">Special Needs</div>
        <div class="panel-body">
            <dl class="dl-horizontal">
                @foreach (var special in Model.Child_Special_Needs)
                {
                    <dt>
                        @special.SpecialNeed.Description
                    </dt>
                }
            </dl>
        </div>
        <div class="panel-footer">
            @if (Model.CanEdit)
            {
                @Html.ActionLink("Update", "UpdateSpecialNeeds", new { id = Model.ID }, new { @class = "btn btn-default btn-xs" })
            }
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">IFSP</div>
        <div class="panel-body">
            <dl class="dl-horizontal">
                @foreach (var ifsp in Model.Child_IFSP)
                {
                    <dt>
                        @ifsp.IFSP.Description
                    </dt>

                }
            </dl>
                
            </div>
        <div class="panel-footer">
            @if (Model.CanEdit)
            {
                @Html.ActionLink("Update", "UpdateIFSP", new { id = Model.ID }, new { @class = "btn btn-default btn-xs" })
            }
        </div>
    </div>

    @if (Model.Family != null)
    {
        <div class="panel panel-default">
            <div class="panel-heading">Family Eligibility</div>
            <div class="panel-body">
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.Family.ChildrenInHome)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Family.ChildrenInHome)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Family.HouseholdSize)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Family.HouseholdSize)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Family.Income)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Family.Income)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Family.MonthlyCostAdditionalServices)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Family.MonthlyCostAdditionalServices)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Family.SNAP)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Family.SNAP)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Family.SSI)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Family.SSI)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Family.TANF)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Family.TANF)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Family.WIC)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Family.WIC)
                    </dd>
                </dl>

            </div>
            <div class="panel-footer">

                @if (Model.CanEdit)
                {

                    @Html.ActionLink("Update", "Edit", "Family", new { id = Model.FamilyID }, new { @class = "btn btn-default btn-xs" })

                }
            </div>
        </div>
    }

    <div class="panel panel-default">
        <div class="panel-heading">Adults</div>
        <div class="panel-body">
                @foreach (var adult in Model.Adults)
                {
                    <div class="adult">
                        <div class="col-lg-3">
                            @adult.NameFirst @adult.NameLast
                        </div>
                        <div class="clearfix">
                            @Html.ActionLink("View", "Details", "Adult", new { id = adult.ID }, new { @class = "btn btn-default btn-xs" })
                            @if (Model.CanEdit)
                            {
                                @Html.Raw(" | ")
                                @Html.ActionLink("Update", "Edit", "Adult", new { id = adult.ID }, new { @class = "btn btn-default btn-xs" })
                                @Html.Raw(" | ")
                                <a id="@adult.ID" class="adultRemove btn btn-default btn-xs">Remove</a>
                            }
                        </div>
                    </div>
                    
                }

        </div>
        <div class="panel-footer">
            @if (Model.CanEdit)
            {
                <div class="">
                    @Html.ActionLink("Add Adult", "Create", "Adult", new { id = Model.ID }, new { @class = "btn btn-default btn-xs" })
                </div>
            }
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">Enrollment</div>
        <div class="panel-body">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col">Provider</th>
                        <th scope="col">Classroom</th>
                        <th scope="col">Start</th>
                        <th scope="col">End</th>
                        <th>&nbsp;</th>
                    </tr>
                </thead>
                <tr>
                    @foreach (var enrollment in Model.ChildEnrollments)
                    {
                        <td>
                            @enrollment.Classroom.Facility.Description
                        </td>
                        <td>
                            @enrollment.Classroom.Description
                        </td>
                        <td>
                            @enrollment.StartDate.Value.ToShortDateString()
                        </td>
                        <td>
                            @enrollment.EndDate.Value.ToShortDateString()
                        </td>
                        <td>
                            @enrollment.EndReason
                        </td>
                        <td>
                            @if (Model.CanEdit)
                            {
                                @Html.ActionLink("Update", "UpdateEnrollment", "Child", new { id = enrollment.ChildID, classid= enrollment.ClassroomID }, new { @class = "btn btn-default btn-xs" })
                            }
                        </td>
                    }
                </tr>
            </table>
            <dl class="dl-horizontal">

            </dl>
        </div>
        <div class="panel-footer">

            @if (Model.CanEdit)
            {

                @Html.ActionLink("Enroll", "Enroll", new { id = Model.ID }, new { @class = "btn btn-default btn-xs" })

            }
        </div>
    </div>

</div>

@section Scripts
{
    <script type="text/javascript">

        var urlRemoveAdult = '@Url.Action("confirmRemoveAdult", "Child")';

        function removeAdult( id) {
            $.get(
                urlRemoveAdult,
                { id: id },
                function (response) {
                    alert(response);
                }
            );
        }

        $(".adultRemove").click(function()
        {
            var adult = $(this).closest('.adult');
            var adultId = $(this).attr("id");

            $.get(urlRemoveAdult, { id: adultId}, function (response) {
                var itsago = confirm(response);
                if (itsago) {
                    $.post('@Url.Action("removeAdult", "Child")', { id: adultId }, function (response) {
                        adult.text("Adult Removed");
                        adult.fadeOut("slow", function () {
                            adult.remove();
                        });
                    });

                }
            });
        });

    </script>
}  