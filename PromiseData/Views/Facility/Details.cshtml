@model PromiseData.ViewModels.FacilityViewModel

@{
    ViewBag.Title = "Details";
}

<h2>Provider Site Details</h2>

<div>
    <ul class="breadcrumb">
        @if (!Model.Provider.IsHub)
        {
            <li>@Html.ActionLink(Model.Provider.ParentHub.LegalName, "Details", "Institution", new { id = Model.Provider.ParentHubId }, null)</li>
        }
        <li>@Html.ActionLink(Model.Provider.LegalName, "Details", "Institution", new { id = Model.Provider.Id }, null)</li>

        <li class="active">@Html.DisplayFor(model => model.Description)</li>
    </ul>

    <h4>@Html.DisplayFor(model => model.Description)</h4>
    <hr />

    <ul class="list-group">
        <li class="list-group-item">
            @Html.DisplayNameFor(model => model.LicenseNumber)
            <span class="pull-right">@Html.DisplayFor(model => model.LicenseNumber)</span>
        </li>
        <li class="list-group-item">
            <span class="badge">@Html.DisplayFor(model => model.ProviderFacilityType)</span>
            @Html.DisplayNameFor(model => model.ProviderFacilityType)
        </li>
        <li class="list-group-item">
            <span class="badge">@Html.DisplayFor(model => model.Turnover_NonPPStaff)</span>
            @Html.DisplayNameFor(model => model.Turnover_NonPPStaff)
        </li>
        <li class="list-group-item">
            <span class="list-group-item-heading">@Html.DisplayNameFor(model => model.TurnoverReasons_NonPPStaff)</span>
            <p>@Html.DisplayFor(model => model.TurnoverReasons_NonPPStaff)</p>
        </li>
        <li class="list-group-item">
            <span class="badge"><i class="glyphicon glyphicon-ban-circle"></i></span>
            Trasnportation Services offered
        </li>
        <li class="list-group-item">
            <span class="badge">@Html.DisplayFor(model => model.ChildrenReceivingTransportationServices)</span>
            @Html.DisplayNameFor(model => model.ChildrenReceivingTransportationServices)
        </li>
    </ul>

    <hr />
    <h4>@Html.DisplayNameFor(model => model.AdditionalChildFamilySupports_ID)</h4>
    <ul class="list-group">
        @foreach (var Support in Model.Supports)
        {
            <li class="list-group-item">
                @Support.Description
            </li>
        }
    </ul>
    <hr />

    <h4>Site Waivers</h4>
    <h5></h5>
    <div class="panel panel-default">
        <div class="panel-heading">Waiver Requests</div>
        <div class="panel-body">
            @foreach (var Waiver in Model.WaiverRequests)
            {
                <dl class="dl-horizontal">
                    <dt>Waiver Type:</dt>
                    <dd>@Waiver.WaiverType</dd>

                    @if (String.Compare(Waiver.WaiverType, "Staff") == 0)
                    {
                        <dt>Staff: </dt>
                        <dd>
                            @Waiver.Staff.NameLast
                            @Html.Raw(", ")
                            @Waiver.Staff.NameFirst
                        </dd>
                    }
                    else
                    {
                        <dt>Spark Rating:</dt>
                        <dd>@Waiver.SparkCurrent</dd>

                        <dt>Service Hours:</dt>
                        <dd>@Waiver.ServiceHours</dd>
                    }
                </dl>
            }
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">Current Waivers</div>
        <div class="panel-body">
        @foreach (var Waiver in Model.WaiversCurrent)
        {
            <dl class="dl-horizontal">
                <dt>Waiver Type:</dt>
                <dd>@Waiver.WaiverType</dd>

                @if (String.Compare(Waiver.WaiverType, "Staff") == 0)
                {
                    <dt>Staff: </dt>
                    <dd>
                        @Waiver.Staff.NameLast
                        @Html.Raw(", ")
                        @Waiver.Staff.NameFirst
                    </dd>

                    <dt>Development:</dt>
                    <dd>@Waiver.Development</dd>
                    
                }
                else
                {
                    <dt>Spark Rating:</dt>
                    <dd>@Waiver.SparkCurrent</dd>
                    <dt>Spark Rating:</dt>
                    <dd>@Waiver.SparkCurrent</dd>

                    <dt>Service Hours:</dt>
                    <dd>@Waiver.NineHundredServiceHours</dd>

                    <dt>Expiration:</dt>
                    <dd>@Waiver.Expiration</dd>
                }

            </dl>
        }
        </div>
    </div>
    <hr />

    <div class="panel panel-default">
        <div class="panel-heading">@Html.DisplayNameFor(model => model.MonitoringVisit1Date)</div>
        <div class="panel-body">
            <dl class="dl-horizontal">
                <dt>@Html.DisplayNameFor(model => model.MonitoringVisit1Date)</dt>
                <dd>@Html.DisplayFor(model => model.MonitoringVisit1Date)</dd>
                <dt>@Html.DisplayNameFor(model => model.MonitoringVisit1Result)</dt>
                <dd>@Html.DisplayFor(model => model.MonitoringVisit1Result)</dd>
            </dl>
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">@Html.DisplayNameFor(model => model.MonitoringVisit2Date)</div>
        <div class="panel-body">
            <dl class="dl-horizontal">
                <dt>@Html.DisplayNameFor(model => model.MonitoringVisit2Date)</dt>
                <dd>@Html.DisplayFor(model => model.MonitoringVisit2Date)</dd>
                <dt>@Html.DisplayNameFor(model => model.MonitoringVisit2Result)</dt>
                <dd>@Html.DisplayFor(model => model.MonitoringVisit2Result)</dd>
            </dl>
        </div>
    </div>

</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
    @Html.ActionLink("Back to List", "Index")
</p>


@*
    Table of Site's Classes
*@
<p>
    @if (Model.CanEdit)
    {
        @Html.ActionLink("Add Classroom", "Create", "Classroom", new { id = Model.ID }, new { @class = "btn btn-success" })
    }
</p>


<h3>@Model.Description Classrooms</h3>
<table class="table table-hover">
    <tr>
        <th>
            Name:
        </th>
        <th>
            Lead Teacher:
        </th>
        <th>
            x
        </th>
        <th>
           x
        </th>
        <th>
            x
        </th>
        <th>
            x
        </th>
        <th>
            x
        </th>
        <th>
            x
        </th>
        <th>
            x
        </th>

        <th>
        </th>

        <th>

        </th>
        <th>

        </th>
        <th>

        </th>
        <th>

        </th>
    </tr>

    @foreach (var classroom in Model.Classrooms)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => classroom.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => classroom.TeacherClasses.FirstOrDefault(t => t.Teacher.TeacherType.Contains("Lead Teacher")).Teacher.NameFirst)
            </td>
            <td>
                @Html.DisplayFor(modelItem => classroom.NewOrExpandedClass)
            </td>
            <td>
                @Html.DisplayFor(modelItem => classroom.SessionHours)
            </td>
            <td>
                @Html.DisplayFor(modelItem => classroom.SessionDays)
            </td>
            <td>
                @Html.DisplayFor(modelItem => classroom.SessionWeeks)
            </td>
            <td>
                @Html.DisplayFor(modelItem => classroom.PPStudents)
            </td>
            <td>
                @Html.DisplayFor(modelItem => classroom.NonPPStudentsHSOPK)
            </td>
            <td>
                @Html.DisplayFor(modelItem => classroom.NonPPStudentsThirdParty)
            </td>
            <td>
                @Html.DisplayFor(modelItem => classroom.PPSlotsUnfilled)
            </td>
            <td>
                @Html.DisplayFor(modelItem => classroom.CLASSScore_ClassroomOrganization)
            </td>
            <td>
                @Html.DisplayFor(modelItem => classroom.CLASSScore_EmotionalSupport)
            </td>
            <td>
                @Html.DisplayFor(modelItem => classroom.CLASSScore_InstructionalSupport)
            </td>
            <td>
                @*@Html.ActionLink("Edit", "Edit", new { id = item.Id }) |*@
                @Html.ActionLink("Details", "Details", "Classroom", new { id = classroom.ID }, null)
                @*@Html.ActionLink("Delete", "Delete", new { id = item.Id })*@
            </td>
        </tr>
    }

</table>