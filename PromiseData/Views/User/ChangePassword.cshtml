@model  PromiseData.Models.ResetPasswordViewModel

@{
    ViewBag.Title = "ChangePasswordView";
}

<h2>Change User Password</h2>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">User: @Model.Email</h3>
    </div>

        @using (Html.BeginForm("ChangePassword", "User"))
        {
            <div class="form-group">
                @Html.AntiForgeryToken()
                                
                <h4>
                    @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                    @Html.DisplayFor(m => m.Email)
                    @Html.HiddenFor(m => m.Email)
                </h4>
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "control-label col-md-2" })
                    @Html.EditorFor(m => m.Password, new { @class = "form-control" } )
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label col-md-2" })
                    @Html.EditorFor(m => m.ConfirmPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                </div>               
            </div>

            <div class="panel-footer">
                <button type="submit" class="btn btn-primary">Change Password</button>
            </div>
        }
</div>

<div>
    @Html.ActionLink("Back to List", "List", null, new { @class="btn btn-default"})
</div>
