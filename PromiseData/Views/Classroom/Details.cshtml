@model PromiseData.Models.Classroom

@{
    ViewBag.Title = "Details";
}

<h2>Classroom Details</h2>

<div>
    <ul class="breadcrumb">
        @if (!Model.Facility.Provider.IsHub)
        {
            <li>@Html.ActionLink(Model.Facility.Provider.ParentHub.LegalName, "Details", "Institution", new { id = Model.Facility.Provider.ParentHubId }, null)</li>
        }
        <li>@Html.ActionLink(Model.Facility.Provider.LegalName, "Details", "Institution", new { id = Model.Facility.ProviderID }, null)</li>
        <li>@Html.ActionLink(Model.Facility.Description, "Details", "Facility", new { id = Model.Facility_ID }, null)</li>

        <li class="active">@Html.DisplayFor(model => model.Description)</li>
    </ul>

    <h3>@Html.DisplayFor(model => model.Description)</h3>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Code_ProgramSessionType.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Code_ProgramSessionType.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Facility.ProviderFacilityType)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Facility.ProviderFacilityType)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Service.Early_Childhood_Services_Received)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Service.Early_Childhood_Services_Received)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.NewOrExpandedClass)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NewOrExpandedClass)
        </dd>
    </dl>

    <h4>Class Session</h4>
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.SessionHours)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SessionHours)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SessionDays)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SessionDays)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SessionWeeks)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SessionWeeks)
        </dd>
    </dl>

    <h4>Class Composition</h4>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.PPStudents)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PPStudents)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.NonPPStudentsHSOPK)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NonPPStudentsHSOPK)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.NonPPStudentsThirdParty)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NonPPStudentsThirdParty)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.NonPPStudentsParentPay)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NonPPStudentsParentPay)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PPSlotsUnfilled)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PPSlotsUnfilled)
        </dd>
    </dl>
</div>

<div>
    <h4>CLASS Scores</h4>
    @foreach (var classScore in Model.CLASSScores)
    {
        <div class="panel panel-default">
            <div class="panel-heading">@classScore.Score_date.ToShortDateString()</div>
            <div class="panel-body">
                @Html.DisplayNameFor(model => classScore.CLASSScore_EmotionalSupport):
                @classScore.CLASSScore_EmotionalSupport.GetValueOrDefault().ToString()
                <div class="progress">
                    <div class="progress-bar progress-bar-info" style="width: 60%;"></div>
                </div>

                @Html.DisplayNameFor(model => classScore.CLASSScore_ClassroomOrganization):
                @classScore.CLASSScore_ClassroomOrganization.GetValueOrDefault().ToString()
                <div class="progress">
                    <div class="progress-bar progress-bar-success" style="width: 60%;"></div>
                </div>

                @Html.DisplayNameFor(model => classScore.CLASSScore_InstructionalSupport):
                @classScore.CLASSScore_InstructionalSupport.GetValueOrDefault().ToString()
                <div class="progress">
                    <div class="progress-bar progress-bar-warning" style="width: 60%;"></div>
                </div>
            </div>
        </div>
    }

    @if (Model.Facility.Provider.IsProvider)
    {
        @Html.ActionLink("Add New SCORE", "Create", "CLASS_Score", new { id = Model.ID }, new { @class = "btn btn-success" })
    }
</div>

@*
    Table of Teachers
*@
@if (Model.TeacherClasses != null)
{

    <h3>@Model.Description Teachers</h3>
        <p>
            @Html.ActionLink("Add Teacher", "Create", "Teacher", new { id = Model.ID }, new { @class = "btn btn-success" })
        </p>


    foreach (var teacherclass in Model.TeacherClasses)
    {

        <div class="col-lg-6">
            <div class="panel panel-default">
                <div class="panel-heading">@Html.DisplayFor(modelItem => teacherclass.Teacher.EndDate)</div>
                <dl class="panel-body dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(modelItem => teacherclass.Teacher.NameFirst)
                    </dt>
                    <dd>
                        @Html.DisplayFor(modelItem => teacherclass.Teacher.NameFirst)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(modelItem => teacherclass.Teacher.NameLast)
                    </dt>
                    <dd>
                        @Html.DisplayFor(modelItem => teacherclass.Teacher.NameLast)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(modelItem => teacherclass.Teacher.TeacherType)
                    </dt>
                    <dd>
                        @Html.DisplayFor(modelItem => teacherclass.Teacher.TeacherType)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(modelItem => teacherclass.Teacher.TeacherIDNumber)
                    </dt>
                    <dd>
                        @Html.DisplayFor(modelItem => teacherclass.Teacher.TeacherIDNumber)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(modelItem => teacherclass.Teacher.StartDate)
                    </dt>
                    <dd>
                        @Html.DisplayFor(modelItem => teacherclass.Teacher.StartDate)
                    </dd>
                </dl>
                <p class="text-right">
                    @if (true) //Model.CanEdit
                    {
                        @Html.ActionLink("Edit", "Edit", "Teacher", new { id = teacherclass.Teacher.ID }, null)
                        @Html.Raw(" | ")
                        @Html.ActionLink("Details", "Details", "Teacher", new { id = teacherclass.Teacher.ID }, null)
                        @Html.Raw(" | ")
                        @Html.ActionLink("Remove", "RemoveFromClassroom", "Teacher", new { id = teacherclass.TeacherID, classroomid = teacherclass.ClassroomID}, null)
                    }
                </p>
            </div>
        </div>



    }

}

<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
    @Html.ActionLink("Back to List", "Index")
</p>
