@model PromiseData.ViewModels.TeacherViewModel

<h2>Details</h2>

<div>
    <h4>Teacher</h4>
    <hr />
    <div class="">
        <div class="panel panel-default">
            <div class="panel-body">
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.TeacherIDNumber)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.TeacherIDNumber)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.NameFirst)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.NameFirst)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.NameLast)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.NameLast)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.TeacherBirthdate)
                    </dt>

                    <dd>
                        @Model.TeacherBirthdate.ToShortDateString()
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.GenderId)
                    </dt>

                    <dd>
                        @Model.Genders.Single(r => r.Code == Model.GenderId.ToString()).Description
                    </dd>
                </dl>
            </div>
        </div>
    </div>

    <div class="">
        <div class="panel panel-default">
            <div class="panel-body">
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.TeacherType)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.TeacherType)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.ClassroomLanguages)
                    </dt>

                    <dd>
                        @foreach (KeyValuePair<int, bool> lang in Model.ClassroomLanguages)
                        {
                            if (lang.Value)
                            {
                                @Model.Languages.Single(r => r.Code == lang.Key).Description
                            }
                        }
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.FluentLanguages)
                    </dt>

                    <dd>
                        @foreach (KeyValuePair<int, bool> lang in Model.FluentLanguages)
                        {
                            if (lang.Value)
                            {
                                @Model.Languages.Single(r => r.Code == lang.Key).Description
                                @Html.Raw(" ")
                            }
                        }
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.EducationID)
                    </dt>

                    <dd>
                        @Model.EducationTypes.Single(r => r.Code == Model.EducationID).Description
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.CDA)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.CDA)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.DegreeField)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.DegreeField)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.PDStep)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.PDStep)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.YearsExperience)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.YearsExperience)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.TeacherSalary)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.TeacherSalary)
                    </dd>
                </dl>
            </div>
        </div>
    </div>


    <div class="panel panel-default">
        <div class="panel-heading">Tenure</div>
        <div class="panel-body">
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.StartDate)
                </dt>

                <dd>
                    @Model.StartDate.ToShortDateString()
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.EndDate)
                </dt>

                <dd>
                    @if (Model.EndDate.HasValue)
                    {
                        Model.EndDate.Value.ToShortDateString();
                    }
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.ReasonForLeaving)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ReasonForLeaving)
                </dd>
            </dl>
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">Waivers</div>
        <div class="panel-body">
            <h5>Waiver Requests</h5>
            @foreach (var Waiver in Model.WaiverRequests)
            {
                <div class="row">
                    <div class="col-md-2">
                        @Waiver.WaiverType
                    </div>
                    <div class="col-md-2">
                        @Waiver.Qualification
                    </div>
                    <div class="col-md-2">
                        @Waiver.AdditionalComments
                    </div>
                </div>
            }

            <br />
            <h5>Current Waivers</h5>
            @foreach (var Waiver in Model.WaiversCurrent)
            {
                <div class="row">
                    <div class="col-md-1">
                        @Waiver.WaiverType
                    </div>
                    <div class="col-md-2">
                        @Waiver.Qualification
                    </div>
                    <div class="col-md-2">
                        @Waiver.Development
                    </div>
                    <div class="col-md-1">
                        @Waiver.Credits
                    </div>
                    <div class="col-md-1">
                        @Waiver.TrainingHours
                    </div>
                    <div class="col-md-2">
                        @Waiver.AdditionalComments
                    </div>
                    <div class="col-md-1">
                        @Waiver.Unsatisfied
                    </div>
                    <div class="col-md-1">
                        @Waiver.Expiration
                    </div>
                </div>
            }
        </div>
    </div>


    <div class="">
        <div class="panel panel-default">
            <div class="panel-heading">Classrooms</div>
            <div class="panel-body">
                @foreach (var classroom in Model.Classrooms)
                {
                    <div>
                        @Html.ActionLink(classroom.Description ?? "Classroom", "Details", "Classroom", new { id = classroom.ID }, null)
                        -
                        <strong>@Html.DisplayFor(clas => classroom.Facility.Description)</strong>
                    </div>
                }
            </div>
        </div>
    </div>



</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
